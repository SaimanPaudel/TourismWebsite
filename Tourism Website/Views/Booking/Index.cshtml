@model IEnumerable<Tourism_Website.Models.Booking>
@{
    ViewBag.Title = "Bookings";
}
<div class="container my-5">
    <h2 class="mb-4 text-primary">Bookings</h2>
    <div class="mb-3">
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
    </div>
    <div class="table-responsive shadow rounded">
        @if (!Model.Any())
        {
            <div class="text-center text-muted fst-italic p-4">
                No bookings found.
            </div>
        }
        else
        {
            <table class="table table-striped table-hover align-middle mb-0 bg-white">
                <thead class="table-dark">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Tour.Title)</th>
                        <th>@Html.DisplayNameFor(model => model.TouristId)</th>
                        <th>@Html.DisplayNameFor(model => model.BookingDate)</th>
                        <th>@Html.DisplayNameFor(model => model.NumberOfPeople)</th>
                        <th>@Html.DisplayNameFor(model => model.TotalPrice)</th>
                        <th>@Html.DisplayNameFor(model => model.Status)</th>
                        <th>@Html.DisplayNameFor(model => model.SpecialRequests)</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Tour.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.TouristId)</td>
                            <td>@item.BookingDate.ToString("yyyy-MM-dd")</td>
                            <td>@Html.DisplayFor(modelItem => item.NumberOfPeople)</td>
                            <td>@String.Format("{0:C}", item.TotalPrice)</td>
                            <td>
                                @{
                                    var status = item.Status?.ToLower() ?? "";
                                    var badgeClass = status switch
                                    {
                                        "confirmed" => "bg-success text-white",
                                        "pending" => "bg-warning text-dark",
                                        "cancelled" => "bg-danger",
                                        _ => ""
                                    };
                                }
                                @if (!string.IsNullOrEmpty(badgeClass))
                                {
                                    <span class="badge @badgeClass">@item.Status</span>
                                }
                                else
                                {
                                    @item.Status
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.SpecialRequests)</td>
                            <td class="text-center">
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-sm btn-primary me-1" title="Edit">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-sm btn-info text-white me-1" title="Details">
                                    <i class="fa fa-eye"></i>
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-sm btn-danger" title="Delete"
                                   onclick="return confirm('Are you sure you want to delete this booking?');">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
