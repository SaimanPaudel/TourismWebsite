@model IEnumerable<Tourism_Website.Models.Booking>
@{
    ViewBag.Title = "Bookings";
    var userRole = (Session["UserRole"] as string) ?? "";
    var userIdString = (Session["UserId"]?.ToString()) ?? "";
}

<div class="container px-0">

    <div class="card shadow-sm border-0 rounded-4">
        <!-- Brown header like the other pages -->
        <div class="card-header text-white py-3" style="background:#8e4433;">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">Bookings</h2>

                @if (userRole == "Tourist")
                {
                    <a href="@Url.Action("Create","Booking")" class="btn btn-outline-light">
                        <i class="fa fa-plus"></i> Create New Booking
                    </a>
                }
            </div>
        </div>

        @if (!Model.Any())
        {
            <div class="card-body">
                <div class="alert alert-info shadow-sm mb-0" style="background:#f8f2f0;border:0;color:#000;">
                    No bookings found.
                </div>
            </div>
        }
        else
        {
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0 booking-table">
                        <thead class="table-light">
                            <tr>
                                <th>Tour</th>
                                <th>TouristId</th> <!-- changed back -->
                                <th>@Html.DisplayNameFor(m => m.First().BookingDate)</th>
                                <th>@Html.DisplayNameFor(m => m.First().NumberOfPeople)</th>
                                <th>@Html.DisplayNameFor(m => m.First().TotalPrice)</th>
                                <th>@Html.DisplayNameFor(m => m.First().Status)</th>
                                <th>@Html.DisplayNameFor(m => m.First().SpecialRequests)</th>
                                <th class="text-end" style="width:240px;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var canManage = userRole == "Admin"
                                                || (userRole == "Tourist" && item.TouristId.ToString() == userIdString)
                                                || (userRole == "Agency" && item.Tour?.CreatedByUserId == userIdString)
                                                || (userRole == "Guide" && item.Tour?.GuideId == userIdString);

                                var status = (item.Status ?? "").ToLower();
                                var badgeClass =
                                    status == "confirmed" ? "badge-status confirmed" :
                                    status == "pending" ? "badge-status pending" :
                                    status == "cancelled" ? "badge-status cancelled" :
                                                             "badge-status";

                                <tr>
                                    <td>@(item.Tour != null ? item.Tour.Title : "—")</td>
                                    <td>@item.TouristId</td> <!-- changed back -->
                                    <td>@item.BookingDate.ToString("yyyy-MM-dd")</td>
                                    <td>@item.NumberOfPeople</td>
                                    <td>@String.Format("{0:C}", item.TotalPrice)</td>
                                    <td><span class="@badgeClass">@(!string.IsNullOrWhiteSpace(item.Status) ? item.Status : "—")</span></td>
                                    <td>@(string.IsNullOrWhiteSpace(item.SpecialRequests) ? "—" : item.SpecialRequests)</td>

                                    <td class="text-end">
                                        <div class="d-flex flex-wrap justify-content-end gap-2">
                                            <a href="@Url.Action("Details","Booking", new { id = item.Id })"
                                               class="btn btn-sm btn-outline-secondary">
                                                <i class="fa fa-eye"></i> View
                                            </a>

                                            @if (canManage)
                                            {
                                                <a href="@Url.Action("Edit","Booking", new { id = item.Id })"
                                                   class="btn btn-sm btn-outline-secondary">
                                                    <i class="fa fa-pen"></i> Edit
                                                </a>
                                                <a href="@Url.Action("Delete","Booking", new { id = item.Id })"
                                                   class="btn btn-sm btn-outline-danger"
                                                   onclick="return confirm('Are you sure you want to delete this booking?');">
                                                    <i class="fa fa-trash"></i> Delete
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card-footer small text-muted d-flex justify-content-between align-items-center">
                <div>
                    <i class="fa fa-circle-info"></i>
                    Status badges show <strong>Confirmed</strong>, <strong>Pending</strong>, or <strong>Cancelled</strong>.
                </div>
                <div></div>
            </div>
        }
    </div>
</div>

<style>
    /* Table row hover tint (matches your other pages) */
    .booking-table tbody tr:hover td {
        background: #fffaf7;
    }

    /* Status badges */
    .badge-status {
        display: inline-block;
        padding: .35rem .6rem;
        border-radius: .5rem;
        font-weight: 600;
        color: #fff;
        background: #6c757d;
    }

        .badge-status.confirmed {
            background: #198754;
        }
        /* green */
        .badge-status.pending {
            background: #f0ad4e;
            color: #212529;
        }
        /* amber */
        .badge-status.cancelled {
            background: #dc3545;
        }
    /* red */

    .table thead th {
        white-space: nowrap;
    }

    .table td {
        vertical-align: middle;
    }
</style>
