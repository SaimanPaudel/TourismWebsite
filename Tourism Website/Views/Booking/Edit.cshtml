@model Tourism_Website.Models.Booking
@{
    ViewBag.Title = "Edit Booking";
}

<div class="container px-0">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0" style="color:#8e4433;">Edit Booking</h2>
        <a href="@Url.Action("Index","Booking")" class="btn btn-outline-secondary">
            <i class="fa fa-arrow-left"></i> Back to List
        </a>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="card shadow-sm">
            <div class="card-body">
                <div class="row g-3">

                    <!-- Tour -->
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.TourId, "Tour", new { @class = "form-label" })
                        @Html.DropDownListFor(
                            m => m.TourId,
                            (IEnumerable<SelectListItem>)ViewBag.TourId,
                            "-- Select a Tour --",
                            new { @class = "form-select" })
                        @Html.ValidationMessageFor(m => m.TourId, "", new { @class = "text-danger" })
                    </div>

                    <!-- Tourist -->
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.TouristId, "Tourist", new { @class = "form-label" })
                        @Html.DropDownListFor(
                            m => m.TouristId,
                            (IEnumerable<SelectListItem>)ViewBag.TouristId,
                            "-- Select a Tourist --",
                            new { @class = "form-select" })
                        @Html.ValidationMessageFor(m => m.TouristId, "", new { @class = "text-danger" })
                    </div>

                    <!-- Booking Date -->
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.BookingDate, new { @class = "form-label" })
                        @Html.TextBoxFor(
                            m => m.BookingDate,
                            "{0:yyyy-MM-dd}",
                            new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(m => m.BookingDate, "", new { @class = "text-danger" })
                    </div>

                    <!-- Number of People -->
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.NumberOfPeople, new { @class = "form-label" })
                        @Html.TextBoxFor(
                            m => m.NumberOfPeople,
                            new { @class = "form-control", type = "number", min = "1", step = "1" })
                        @Html.ValidationMessageFor(m => m.NumberOfPeople, "", new { @class = "text-danger" })
                    </div>

                    <!-- Total Price (read-only; recalculated server-side on save) -->
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.TotalPrice, new { @class = "form-label" })
                        @Html.TextBoxFor(
                            m => m.TotalPrice,
                            new { @class = "form-control", type = "number", step = "0.01", @readonly = "readonly" })
                        <small class="text-muted">Total price is recalculated from the tour price × number of people when you save.</small>
                        @Html.ValidationMessageFor(m => m.TotalPrice, "", new { @class = "text-danger" })
                    </div>

                    <!-- Status -->
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.Status, new { @class = "form-label" })
                        @Html.DropDownListFor(
                            m => m.Status,
                            new SelectList(new[] { "Pending", "Confirmed", "Cancelled" }, Model.Status),
                            "-- Select Status --",
                            new { @class = "form-select" })
                        @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                    </div>

                    <!-- Special Requests -->
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.SpecialRequests, new { @class = "form-label" })
                        @Html.TextAreaFor(m => m.SpecialRequests, new { @class = "form-control", rows = 3 })
                        @Html.ValidationMessageFor(m => m.SpecialRequests, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="card-footer d-flex justify-content-end gap-2">
                <button type="submit" class="btn btn-brand">
                    <i class="fa fa-save"></i> Save
                </button>
                <a href="@Url.Action("Index","Booking")" class="btn btn-outline-secondary">
                    Cancel
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .btn-brand {
        background-color: #8e4433;
        color: #fff;
        border: 0;
    }

        .btn-brand:hover {
            background-color: #6b3025;
            color: #fff;
        }
</style>
