@model Tourism_Website.Models.User
@{
    ViewBag.Title = "Edit User";
}

<div class="container px-0">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0" style="color:#8e4433;">Edit User</h2>
        <a href="@Url.Action("Index","User")" class="btn btn-outline-secondary">
            <i class="fa fa-arrow-left"></i> Back to List
        </a>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.UserId)

        <div class="card shadow-sm">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Full Name" })
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        <small class="text-muted">Consider hashing before saving in production.</small>
                    </div>

                    <div class="col-md-6">
                        @Html.Label("Role", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.Role,
                            new SelectList(new[] { "Admin", "Agency", "Guide", "Tourist" }, Model.Role),
                            "-- Select Role --",
                            new { @class = "form-select" })
                        @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-12">
                        <div class="alert alert-info mb-0">
                            <i class="fa fa-circle-info"></i>
                            Changing <strong>Role</strong> here sets the effective permissions immediately.
                            Pending request fields (if any) are not edited on this form.
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer d-flex justify-content-end gap-2">
                <button type="submit" class="btn btn-brand">
                    <i class="fa fa-save"></i> Save
                </button>
                <a href="@Url.Action("Details","User", new { id = Model.UserId })" class="btn btn-outline-secondary">
                    <i class="fa fa-eye"></i> View
                </a>
            </div>
        </div>
    }
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .btn-brand {
        background-color: #8e4433;
        color: #fff;
        border: 0;
    }

        .btn-brand:hover {
            background-color: #6b3025;
            color: #fff;
        }
</style>
